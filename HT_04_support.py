#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 7.3
#  in conjunction with Tcl version 8.6
#    Feb 19, 2023 05:43:37 PM IST  platform: Windows NT

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *
import serial,time
from serial import Serial
import serial.tools.list_ports
import openpyxl
import socket

import HT_04

ser = serial.Serial()
wb = openpyxl.Workbook() 

sheet = wb.active
Connect_flag = 0



def main(*args):
    '''Main entry point for the application.'''
    global root
    root = tk.Tk()
    root.protocol( 'WM_DELETE_WINDOW' , root.destroy)
    # Creates a toplevel widget.
    global _top1, _w1
    _top1 = root
    _w1 = HT_04.Toplevel1(_top1)
    #radio = IntVar()
    init_fun()
    refresh_ports()
    _w1.Text1.delete("1.0", END) 
    _w1.Text1.insert("1.0", 'Hello ^-^')
    
    root.mainloop()
    #_w1.Text1.delete("1.0", END) 

def init_fun(*args):
    global run_flag, max_flag

    #max_flag = 0
    run_flag = 0
    _w1.Text1.delete("1.0", END) 
    _w1.Text1.insert("1.0", 'Setting UP')
    
def Connect(*args):
    
    p = _w1.TCombobox1.get()
    p = p.split(" -")
    N = p[0]

    global Connect_flag,Test_flag

    
     

    if Connect_flag == 0:
    
        ser.port = N
        ser.baudrate = 115200
        ser.bytesize = 8
        ser.timeout = 2
        ser.parity = serial.PARITY_NONE
        ser.stopbits = serial.STOPBITS_ONE
        ser.open()
        if ser.is_open:
            _w1.Text1.delete("1.0", END) 
            _w1.Text1.insert(END, 'Port Cold not open')

        #p_x2 = "open"
        _w1.Button1.configure(background = "#50ef21")
        _w1.Button1.configure(text='''Connected''')
        Connect_flag = 1
        Test_flag = 1
        _w1.Text1.delete("1.0", END) 
        _w1.Text1.insert(END, 'Connected to entered port')
    else:
        Disconnect()
        Connect_flag = 0
        Test_flag = 0
        

def Disconnect(*args):
    ser.close()
    _w1.Button1.configure(background = "#d9d9d9")
    _w1.Button1.configure(state = NORMAL)
    _w1.Button1.configure(text='''Disconnected''')
    p_x2 = "not open"
    _w1.Text1.delete("1.0", END) 
    _w1.Text1.insert(END, 'Port is disconnected')

def show_ports():
    return serial.tools.list_ports.comports()

def refresh_ports(*args):
    _w1.TCombobox1['values'] = show_ports()
    time.sleep(1)
    _w1.Text1.delete("1.0", END) 
    _w1.Text1.insert(END, 'Hello again ^-^')
    


def run(*args):

    HOST = "127.0.0.1"  # The server's hostname or IP address
    PORT = 60294  # The port used by the server

    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        s.connect((HOST, PORT))
        s.sendall(b"Hello, world")
        data = s.recv(1024)

        print(f"Received {data!r}")
        
def xcl_format(*args):
    c1 = sheet.cell(row = 1, column = 5) 
            # writing values to cells 
    c1.value = "Test Report"

    c2 = sheet.cell(row = 2, column = 1) 
            # writing values to cells 
    c2.value = "Side 1"

    
    c3 = sheet.cell(row = 2, column = 2) 
            # writing values to cells 
    c3.value = "Side 2"

    for x in range(50):
            c1 = sheet.cell(row = x + 3, column = 1) 
            c1.value = x
            # writing values to cells 
            #c1.value = ser.read(1).hex()
            

    wb.save(f_name)


def file_name(*args):
    global f_name,file_flag
    file_flag = 1
    f_name = 'default.xlsx'
    f_name = _w1.Entry1.get()
    if f_name == '':
        _w1.Text1.delete("1.0", END) 
        _w1.Text1.insert(END, 'Please enter file name x_x')
        return 0
        
    f_name += ".xlsx"
    _w1.Text1.delete("1.0", END) 
    _w1.Text1.insert(END, 'File name is '+ f_name)
    return 1


def max_pin(*args):
    global max_p
    max_flag = 0
    max_p = str(_w1.Entry2.get())
    
    if max_p == '':
        max_p = '0'

    max_p = int(max_p)

    if max_p < 50 and max_p > 0:
        _w1.Text1.delete("1.0", END) 
        _w1.Text1.insert(END, 'Got it')
        max_flag = 1
        

    else:
        _w1.Text1.delete("1.0", END) 
        _w1.Text1.insert(END, 'Enter valid pin number, should be between 0 to 50')
        max_flag = 0
    return max_flag
        


def check_port(*args):
    if(ser.isOpen() == False):
        _w1.Text1.delete("1.0", END) 
        _w1.Text1.insert(END, 'Port is not open')
    #ser.open()



if __name__ == '__main__':
    HT_04.start_up()



###################






####################